{"id":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","dependencies":[{"name":"/Users/kiranraju/Documents/Side Projects/Notely/ui/package.json","includedInParent":true,"mtime":1593202705101},{"name":"/Users/kiranraju/Documents/Side Projects/Notely/ui/.babelrc","includedInParent":true,"mtime":1592849635497},{"name":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/formatDistanceToNowStrict/package.json","includedInParent":true,"mtime":499162500000},{"name":"../formatDistanceStrict/index.js","loc":{"line":1,"column":34},"parent":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","resolved":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/formatDistanceStrict/index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25},"parent":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","resolved":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/_lib/requiredArgs/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistanceToNowStrict;\n\nvar _index = _interopRequireDefault(require(\"../formatDistanceStrict/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(dirtyDate, Date.now(), dirtyOptions);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":3,"column":0}},{"generated":{"line":88,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":15}},{"name":"formatDistanceToNowStrict","generated":{"line":88,"column":9},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":24}},{"generated":{"line":88,"column":34},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":15}},{"name":"dirtyDate","generated":{"line":88,"column":35},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":50}},{"generated":{"line":88,"column":44},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":15}},{"name":"dirtyOptions","generated":{"line":88,"column":46},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":61}},{"generated":{"line":88,"column":58},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":15}},{"generated":{"line":88,"column":60},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":75}},{"generated":{"line":89,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":2}},{"generated":{"line":89,"column":23},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":15}},{"generated":{"line":89,"column":24},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":2}},{"name":"arguments","generated":{"line":89,"column":26},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":18}},{"generated":{"line":89,"column":35},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":2}},{"generated":{"line":90,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":2}},{"generated":{"line":90,"column":9},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":9}},{"name":"dirtyDate","generated":{"line":90,"column":29},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":31}},{"generated":{"line":90,"column":38},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":9}},{"name":"Date","generated":{"line":90,"column":40},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":42}},{"generated":{"line":90,"column":44},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":46}},{"name":"now","generated":{"line":90,"column":45},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":47}},{"generated":{"line":90,"column":48},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":42}},{"generated":{"line":90,"column":50},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":9}},{"name":"dirtyOptions","generated":{"line":90,"column":52},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":54}},{"generated":{"line":90,"column":64},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":9}},{"generated":{"line":90,"column":65},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":2}},{"generated":{"line":91,"column":0},"source":"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":81,"column":1}}],"sources":{"../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js":"import distanceInStrictWords from '../formatDistanceStrict/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInStrictWords(dirtyDate, Date.now(), dirtyOptions);\n}"},"lineCount":null}},"error":null,"hash":"37ab6034fd4f30494984efa087e13b4a","cacheData":{"env":{}}}