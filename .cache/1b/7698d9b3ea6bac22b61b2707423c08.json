{"id":"../node_modules/date-fns/esm/parseJSON/index.js","dependencies":[{"name":"/Users/kiranraju/Documents/Side Projects/Notely/ui/package.json","includedInParent":true,"mtime":1593202705101},{"name":"/Users/kiranraju/Documents/Side Projects/Notely/ui/.babelrc","includedInParent":true,"mtime":1592849635497},{"name":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/parseJSON/package.json","includedInParent":true,"mtime":499162500000},{"name":"../toDate/index.js","loc":{"line":1,"column":19},"parent":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/parseJSON/index.js","resolved":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/toDate/index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25},"parent":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/parseJSON/index.js","resolved":"/Users/kiranraju/Documents/Side Projects/Notely/ui/node_modules/date-fns/esm/_lib/requiredArgs/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseJSON;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n *     - `2000-03-15T05:20:10Z`: Without milliseconds\n *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n *     - A `Date` instance will be cloned\n *     - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\nfunction parseJSON(argument) {\n  (0, _index2.default)(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return (0, _index.default)(argument);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":3,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":37,"column":15}},{"name":"parseJSON","generated":{"line":47,"column":9},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":37,"column":24}},{"generated":{"line":47,"column":18},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":37,"column":15}},{"name":"argument","generated":{"line":47,"column":19},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":37,"column":34}},{"generated":{"line":47,"column":27},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":37,"column":15}},{"generated":{"line":47,"column":29},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":37,"column":44}},{"generated":{"line":48,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":38,"column":2}},{"generated":{"line":48,"column":23},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":38,"column":15}},{"generated":{"line":48,"column":24},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":38,"column":2}},{"name":"arguments","generated":{"line":48,"column":26},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":38,"column":18}},{"generated":{"line":48,"column":35},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":38,"column":2}},{"generated":{"line":50,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":2}},{"generated":{"line":50,"column":6},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":6}},{"name":"argument","generated":{"line":50,"column":13},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":13}},{"generated":{"line":50,"column":21},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":6}},{"generated":{"line":50,"column":26},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":26}},{"generated":{"line":50,"column":34},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":2}},{"generated":{"line":50,"column":36},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":40,"column":36}},{"generated":{"line":51,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":4}},{"name":"parts","generated":{"line":51,"column":8},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":8}},{"generated":{"line":51,"column":13},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":13}},{"name":"argument","generated":{"line":51,"column":16},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":16}},{"generated":{"line":51,"column":24},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":24}},{"name":"match","generated":{"line":51,"column":25},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":25}},{"generated":{"line":51,"column":30},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":16}},{"generated":{"line":51,"column":31},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":31}},{"generated":{"line":51,"column":114},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":16}},{"generated":{"line":51,"column":115},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":41,"column":4}},{"generated":{"line":53,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":43,"column":4}},{"name":"parts","generated":{"line":53,"column":8},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":43,"column":8}},{"generated":{"line":53,"column":13},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":43,"column":4}},{"generated":{"line":53,"column":15},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":43,"column":15}},{"generated":{"line":54,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":6}},{"generated":{"line":54,"column":13},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":13}},{"name":"Date","generated":{"line":54,"column":17},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":17}},{"generated":{"line":54,"column":21},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":13}},{"name":"Date","generated":{"line":54,"column":22},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":26},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":26}},{"name":"UTC","generated":{"line":54,"column":27},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":27}},{"generated":{"line":54,"column":30},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":31},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":31}},{"name":"parts","generated":{"line":54,"column":32},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":32}},{"generated":{"line":54,"column":37},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":37}},{"generated":{"line":54,"column":38},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":38}},{"generated":{"line":54,"column":39},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":37}},{"generated":{"line":54,"column":40},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"name":"parts","generated":{"line":54,"column":42},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":42}},{"generated":{"line":54,"column":47},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":47}},{"generated":{"line":54,"column":48},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":48}},{"generated":{"line":54,"column":49},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":47}},{"generated":{"line":54,"column":50},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":42}},{"generated":{"line":54,"column":53},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":53}},{"generated":{"line":54,"column":54},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":56},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":56}},{"name":"parts","generated":{"line":54,"column":57},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":57}},{"generated":{"line":54,"column":62},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":62}},{"generated":{"line":54,"column":63},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":63}},{"generated":{"line":54,"column":64},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":62}},{"generated":{"line":54,"column":65},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":67},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":67}},{"name":"parts","generated":{"line":54,"column":68},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":68}},{"generated":{"line":54,"column":73},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":73}},{"generated":{"line":54,"column":74},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":74}},{"generated":{"line":54,"column":75},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":73}},{"generated":{"line":54,"column":76},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":78},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":78}},{"name":"parts","generated":{"line":54,"column":79},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":79}},{"generated":{"line":54,"column":84},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":84}},{"generated":{"line":54,"column":85},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":85}},{"generated":{"line":54,"column":86},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":84}},{"generated":{"line":54,"column":87},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":89},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":89}},{"name":"parts","generated":{"line":54,"column":90},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":90}},{"generated":{"line":54,"column":95},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":95}},{"generated":{"line":54,"column":96},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":96}},{"generated":{"line":54,"column":97},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":95}},{"generated":{"line":54,"column":98},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":100},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":100}},{"generated":{"line":54,"column":101},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":101}},{"generated":{"line":54,"column":102},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":102}},{"name":"parts","generated":{"line":54,"column":103},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":103}},{"generated":{"line":54,"column":108},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":108}},{"generated":{"line":54,"column":109},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":109}},{"generated":{"line":54,"column":110},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":108}},{"generated":{"line":54,"column":111},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":103}},{"generated":{"line":54,"column":115},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":115}},{"generated":{"line":54,"column":118},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":102}},{"generated":{"line":54,"column":122},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":122}},{"generated":{"line":54,"column":126},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":101}},{"name":"substring","generated":{"line":54,"column":128},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":128}},{"generated":{"line":54,"column":137},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":101}},{"generated":{"line":54,"column":138},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":138}},{"generated":{"line":54,"column":139},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":101}},{"generated":{"line":54,"column":141},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":141}},{"generated":{"line":54,"column":142},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":101}},{"generated":{"line":54,"column":143},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":22}},{"generated":{"line":54,"column":144},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":13}},{"generated":{"line":54,"column":145},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":44,"column":6}},{"generated":{"line":55,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":45,"column":5}},{"generated":{"line":57,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":4}},{"generated":{"line":57,"column":11},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":11}},{"name":"Date","generated":{"line":57,"column":15},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":15}},{"generated":{"line":57,"column":19},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":11}},{"name":"NaN","generated":{"line":57,"column":20},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":20}},{"generated":{"line":57,"column":23},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":11}},{"generated":{"line":57,"column":24},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":47,"column":4}},{"generated":{"line":58,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":48,"column":3}},{"generated":{"line":60,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":50,"column":2}},{"generated":{"line":60,"column":9},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":50,"column":9}},{"name":"argument","generated":{"line":60,"column":29},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":50,"column":16}},{"generated":{"line":60,"column":37},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":50,"column":9}},{"generated":{"line":60,"column":38},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":50,"column":2}},{"generated":{"line":61,"column":0},"source":"../node_modules/date-fns/esm/parseJSON/index.js","original":{"line":51,"column":1}}],"sources":{"../node_modules/date-fns/esm/parseJSON/index.js":"import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n *     - `2000-03-15T05:20:10Z`: Without milliseconds\n *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n *     - A `Date` instance will be cloned\n *     - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}"},"lineCount":null}},"error":null,"hash":"5f62576fa12f21c278fd293d930b1a9f","cacheData":{"env":{}}}